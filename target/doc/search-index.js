var searchIndex = JSON.parse('{\
"tp_individual":{"doc":"","t":[17,5,5,5,5,5,5,0,5,5,0,0,0,0,0,0,3,11,11,12,12,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,11,11,11,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,12,11,11,11],"n":["MAX_TABLERO","crear_tablero","eliminar_espacios","juego_de_ajedrez","leer_lineas","main","match_pieza","model","obtener_caracter","obtener_piezas","casilla","color","info","pieza","resultado","tablero","Casilla","borrow","borrow_mut","columna","fila","fmt","from","into","try_from","try_into","type_id","Blanco","Color","Negro","borrow","borrow_mut","eq","fmt","from","into","try_from","try_into","type_id","Info","borrow","borrow_mut","color","fmt","from","into","new","posicion","try_from","try_into","type_id","Alfil","Caballo","Dama","Peon","Pieza","Rey","Torre","borrow","borrow_mut","distancia_manhattan","fmt","from","get_info","into","puede_capturar","puede_capturar_diagonal","puede_capturar_l","puede_capturar_peon","puede_capturar_recta","try_from","try_into","type_id","Blanco","Empate","Negro","Ninguno","Resultado","borrow","borrow_mut","fmt","from","into","to_string","try_from","try_into","type_id","Tablero","borrow","borrow_mut","calcular_resultado","from","into","pieza_blanca","pieza_negra","try_from","try_into","type_id"],"q":["tp_individual","","","","","","","","","","tp_individual::model","","","","","","tp_individual::model::casilla","","","","","","","","","","","tp_individual::model::color","","","","","","","","","","","","tp_individual::model::info","","","","","","","","","","","","tp_individual::model::pieza","","","","","","","","","","","","","","","","","","","","","","tp_individual::model::resultado","","","","","","","","","","","","","","tp_individual::model::tablero","","","","","","","","","",""],"d":["","Dadas dos piezas de lifetime ’a, crea un tablero con …","Remueve los espacios que separan las columnas del tablero","Función principal del juego. Recibe el path del archivo y …","Abre el archivo del path y devuelve las líneas del mismo …","Función principal del programa. Recibe los argumentos de …","Dado un caracter del archivo de texto, agrega la pieza …","","Dada una posicion del string (columna) retorna el caracter …","Recibe las líneas del archivo (de tipo …","","","","","","","Representa una casilla del tablero de ajedrez. Contiene la …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Enumeración de los colores de las fichas de ajedez.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Contenedor de información de una pieza. Contiene el color …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Crea una nueva instancia de Info totalmente incializada.","","","","","","","","","Representa una pieza del ajedrez. Contiene la información …","","","","","Funcion que devuelve la distancia manhattan entre dos …","","Returns the argument unchanged.","Funcion que devuelve la información de la pieza …","Calls <code>U::from(self)</code>.","Función que define el comportamiento común a todas las …","Funcion que devuelve true si la pieza puede capturar a …","Funcion que devuelve true si la pieza puede capturar a …","Funcion que devuelve true si un peón puede capturar a …","Funcion que devuelve true si la pieza puede capturar a …","","","","","","","","Enum que representa los posibles resultados del juego.","","","Esta función define un formato de display a la hora de …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Representa el tablero de ajedrez.  Contiene las piezas que …","","","Determina el resultado del juego: Blanco: indica que solo …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,14,0,14,14,14,14,14,14,14,14,14,14,0,16,16,16,16,16,16,16,16,16,16,16,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,17,17,17,0,17,17,17,17,17,17,17,17,17,0,2,2,2,2,2,2,2,2,2,2],"f":[0,[[1,1],2],[3,3],[3],[3,[[6,[[5,[4]]]]]],[[]],[[7,8,8]],0,[[3,8],7],[[[6,[[5,[4]]]]]],0,0,0,0,0,0,0,[[]],[[]],0,0,[[9,10],11],[[]],[[]],[[],12],[[],12],[[],13],0,0,0,[[]],[[]],[[14,14],15],[[14,10],11],[[]],[[]],[[],12],[[],12],[[],13],0,[[]],[[]],0,[[16,10],11],[[]],[[]],[[14,8,8],16],0,[[],12],[[],12],[[],13],0,0,0,0,0,0,0,[[]],[[]],[[1,9,9],8],[[1,10],11],[[]],[1,16],[[]],[[1,1],15],[[1,9,9],15],[[1,9,9],15],[[1,9,9,14],15],[[1,9,9],15],[[],12],[[],12],[[],13],0,0,0,0,0,[[]],[[]],[[17,10],[[12,[18]]]],[[]],[[]],[[],3],[[],12],[[],12],[[],13],0,[[]],[[]],[2,17],[[]],[[]],0,0,[[],12],[[],12],[[],13]],"p":[[4,"Pieza"],[3,"Tablero"],[3,"String"],[3,"File"],[3,"BufReader"],[3,"Lines"],[15,"char"],[15,"i32"],[3,"Casilla"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[4,"Color"],[15,"bool"],[3,"Info"],[4,"Resultado"],[3,"Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
